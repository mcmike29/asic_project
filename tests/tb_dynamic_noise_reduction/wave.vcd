$date
	Mon May 12 18:43:37 2025
$end
$version
	Icarus Verilog
$end
$timescale
	1ps
$end
$scope module tb_dynamic_noise_reduction $end
$var wire 16 ! y_out [15:0] $end
$var parameter 32 " CYCLES $end
$var parameter 32 # WIDTH $end
$var reg 16 $ alpha [15:0] $end
$var reg 1 % clk $end
$var reg 1 & reset $end
$var reg 16 ' x_in [15:0] $end
$scope module dut $end
$var wire 16 ( alpha [15:0] $end
$var wire 1 % clk $end
$var wire 1 & reset $end
$var wire 16 ) x_in [15:0] $end
$var parameter 32 * WIDTH $end
$var reg 32 + a_x_product [31:0] $end
$var reg 32 , a_yprev_product [31:0] $end
$var reg 32 - alpha_ext [31:0] $end
$var reg 16 . one_fixed [15:0] $end
$var reg 32 / one_fixed_ext [31:0] $end
$var reg 32 0 sum_shifted [31:0] $end
$var reg 16 1 y_out [15:0] $end
$var reg 16 2 y_prev [15:0] $end
$upscope $end
$scope begin $ivl_for_loop0 $end
$var integer 32 3 i [31:0] $end
$upscope $end
$upscope $end
$enddefinitions $end
$comment Show the parameter values. $end
$dumpall
b10000 *
b10000 #
b1010 "
$end
#0
$dumpvars
b0 3
b0 2
b0 1
bx 0
bx /
b111111111111111 .
bx -
bx ,
bx +
b0 )
b10000000000000 (
b0 '
1&
0%
b10000000000000 $
b0 !
$end
#5000
1%
#10000
0%
#12000
0&
#15000
b1000000000000 2
b1000000000000 !
b1000000000000 1
b1000000000000 0
b0 ,
b1000000000000000000000000000 +
b10000000000000 -
b111111111111111 /
b100000000000000 '
b100000000000000 )
b1 3
1%
#20000
0%
#25000
b10101111111111 2
b10101111111111 !
b10101111111111 1
b10101111111111 0
b101111111111111000000000000 ,
b1111111111111110000000000000 +
b111111111111111 '
b111111111111111 )
b10 3
1%
#30000
0%
#35000
b10000011111110 2
b10000011111110 !
b10000011111110 1
b10000011111110 0
b10000011111110111010000000001 ,
b0 +
b0 '
b0 )
b11 3
1%
#40000
0%
#45000
b100010111110 2
b100010111110 !
b100010111110 1
b100010111110 0
b1100010111110001111100000010 ,
b11111000000000000000000000000000 +
b1100000000000000 '
b1100000000000000 )
b100 3
1%
#50000
0%
#55000
b1110011010001110 2
b1110011010001110 !
b1110011010001110 1
b11111111111111111110011010001110 0
b11010001110011011101000010 ,
b11110000000000000010000000000000 +
b1000000000000001 '
b1000000000000001 )
b101 3
1%
#60000
0%
#65000
b1110110011101010 2
b1110110011101010 !
b1110110011101010 1
b11111111111111111110110011101010 0
b11110110011101010101100101110010 ,
b0 +
b0 '
b0 )
b110 3
1%
#70000
0%
#75000
b1111100110101111 2
b1111100110101111 !
b1111100110101111 1
b11111111111111111111100110101111 0
b11111000110101111101001100010110 ,
b100000000000000000000000000 +
b10000000000000 '
b10000000000000 )
b111 3
1%
#80000
0%
#85000
b1101000011 2
b1101000011 !
b1101000011 1
b1101000011 0
b11111101101000011010011001010001 ,
b1000 3
1%
#90000
0%
#95000
b1001110010 2
b1001110010 !
b1001110010 1
b1001110010 0
b1001110010001110010111101 ,
b0 +
b0 '
b0 )
b1001 3
1%
#100000
0%
#105000
b111010101 2
b111010101 !
b111010101 1
b111010101 0
b111010101011110110001110 ,
b1010 3
1%
#110000
0%
#115000
b101011111 2
b101011111 !
b101011111 1
b101011111 0
b101011111101111000101011 ,
1%
#120000
0%
#125000
b100000111 2
b100000111 !
b100000111 1
b100000111 0
b100000111001111010100001 ,
1%
